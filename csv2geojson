#!/usr/bin/env node

var optimist = require('optimist'),
    fs = require('fs'),
    concat = require('concat-stream'),
    csv2geojson = require('./'),
    argv = optimist
        .usage('Usage: $0 --lat [string] --lon [string] --delimiter [string] FILE')
        .describe('lat', 'the name of the latitude column')
        .describe('lon', 'the name of the longitude column')
        .describe('line', 'whether or not to output points as a LineString')
        .describe('delimiter', 'the type of delimiter')
        .describe('numeric-fields', 'comma separated list of fields to convert to numbers')
        .describe('prettyPrintSpaces', 'number of spaces to use for pretty print')
        .default('delimiter', ',')
        .default('line', false)
        .default('prettyPrintSpaces', 2)
        .argv;

if (process.stdin.isTTY && !argv._[0]) {
    return optimist.showHelp();
}
(argv._.length ? fs.createReadStream(argv._[0]) : process.stdin).pipe(concat(convert));

function convert(data) {
    csv2geojson.csv2geojson(data.toString(), {
        latfield: argv.lat,
        lonfield: argv.lon,
        delimiter: argv.delimiter,
        numericFields: argv['numeric-fields']
    }, function(err, data) {
        if (err) console.error(JSON.stringify(err, null, argv.prettyPrintSpaces));
        if (argv.line) data = csv2geojson.toLine(data)
        console.log(JSON.stringify(data, null, argv.prettyPrintSpaces));
    });
}
